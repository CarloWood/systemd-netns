VETH_IFNAME="vn"

# --- Helper functions ---

# Function to clean up the namespace if it exists.
function cleanup_veth_up_outside() {
  echo "Executing cleanup due to script failure or exit signal..." >&2
  if /usr/sbin/ip link show "${IFNAME_OUTSIDE}" > /dev/null 2>&1; then
    echo "Attempting to delete VETH interface ${IFNAME_OUTSIDE} (and its peer ${IFNAME_INSIDE})..." >&2
    /usr/sbin/ip link delete "${IFNAME_OUTSIDE}" || true
  fi
}

# --- Bring veth up ---

function configure_veth_up_outside() {
  NS_NAME="$1"

  # This variable must be set in /etc/conf.d/netns/veth-NSNAME.conf.
  assert_non_empty IFADDR_OUTSIDE

  # Allow these to be already set from /etc/conf.d/netns/veth-NSNAME.conf
  if [[ -z "${IFNAME_OUTSIDE}" ]]; then
    assert_non_empty VETH_IFNAME
    IFNAME_OUTSIDE="${VETH_IFNAME}-${NS_NAME}0"
  fi
  if [[ -z "${IFNAME_INSIDE}" ]]; then
    assert_non_empty VETH_IFNAME
    IFNAME_INSIDE="${VETH_IFNAME}-${NS_NAME}1"
  fi

  local result=0
  export -f cleanup_veth_up_outside

  (
    trap cleanup_veth_up_outside ERR
    set -e

    # Create a pair of virtual network interfaces that act like a direct virtual patch cable.
    echo "Creating a VETH pair with interfaces ${IFNAME_OUTSIDE} and ${IFNAME_INSIDE}..."
    /usr/sbin/ip link add "${IFNAME_OUTSIDE}" type veth peer name "${IFNAME_INSIDE}"
    # Remove a potential Queuing Discipline added by the kernel.
    ! tc qdisc del dev "${IFNAME_INSIDE}" root
    # Check if MAC address is specified.
    if [[ -n "${VETH_MAC:-}" ]]; then
      /usr/sbin/ip link set "${IFNAME_INSIDE}" address "${VETH_MAC}"
    fi

    echo "Moving interface ${IFNAME_INSIDE} into namespace ${NS_NAME}..."
    /usr/sbin/ip link set "${IFNAME_INSIDE}" netns "${NS_NAME}"

    echo "Bringing interface ${IFNAME_OUTSIDE} UP..."
    /usr/sbin/ip link set dev "${IFNAME_OUTSIDE}" up

    echo "Adding address ${IFADDR_OUTSIDE} to ${IFNAME_OUTSIDE}..."
    /usr/sbin/ip address add ${IFADDR_OUTSIDE} dev "${IFNAME_OUTSIDE}"
  )

  result=$?
  return $result
}

function configure_veth_up_inside() {
  NS_NAME="$1"

  # This variable must be set in /etc/conf.d/netns/veth-NSNAME.conf.
  assert_non_empty IFADDR_INSIDE

  if [[ -z "${IFNAME_INSIDE}" ]]; then
    assert_non_empty VETH_IFNAME
    IFNAME_INSIDE="${VETH_IFNAME}-${NS_NAME}1"
  fi
   
  echo "Bringing interface ${IFNAME_INSIDE} UP inside namespace ${NS_NAME}..."
  /usr/sbin/ip link set dev "${IFNAME_INSIDE}" up

  echo "Adding address ${IFADDR_INSIDE} to ${IFNAME_INSIDE} inside namespace ${NS_NAME}..."
  /usr/sbin/ip address add ${IFADDR_INSIDE} dev "${IFNAME_INSIDE}"
}

# --- Bring veth down ---

function configure_veth_down_outside() {
  NS_NAME="$1"

  if [[ -z "${IFNAME_OUTSIDE}" ]]; then
    assert_non_empty VETH_IFNAME
    IFNAME_OUTSIDE="${VETH_IFNAME}-${NS_NAME}0"
  fi

  echo "Deleting interface ${IFNAME_OUTSIDE}..."
  /usr/sbin/ip link delete ${IFNAME_OUTSIDE}
}
